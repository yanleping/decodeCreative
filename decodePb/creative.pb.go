// Code generated by protoc-gen-go. DO NOT EDIT.
// source: decodePb/creative.proto

package decodePb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Creative struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	VideoLength          int32    `protobuf:"varint,2,opt,name=videoLength,proto3" json:"videoLength,omitempty"`
	VideoSize            int32    `protobuf:"varint,3,opt,name=videoSize,proto3" json:"videoSize,omitempty"`
	VideoResolution      string   `protobuf:"bytes,4,opt,name=videoResolution,proto3" json:"videoResolution,omitempty"`
	Width                int32    `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32    `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	WatchMile            int32    `protobuf:"varint,7,opt,name=watchMile,proto3" json:"watchMile,omitempty"`
	BitRate              int32    `protobuf:"varint,8,opt,name=bitRate,proto3" json:"bitRate,omitempty"`
	IValue               int32    `protobuf:"varint,9,opt,name=iValue,proto3" json:"iValue,omitempty"`
	SValue               string   `protobuf:"bytes,10,opt,name=sValue,proto3" json:"sValue,omitempty"`
	FValue               float64  `protobuf:"fixed64,11,opt,name=fValue,proto3" json:"fValue,omitempty"`
	Resolution           string   `protobuf:"bytes,12,opt,name=resolution,proto3" json:"resolution,omitempty"`
	Mime                 string   `protobuf:"bytes,13,opt,name=mime,proto3" json:"mime,omitempty"`
	AdvCreativeId        string   `protobuf:"bytes,14,opt,name=advCreativeId,proto3" json:"advCreativeId,omitempty"`
	CreativeId           int64    `protobuf:"varint,15,opt,name=creativeId,proto3" json:"creativeId,omitempty"`
	FMd5                 string   `protobuf:"bytes,16,opt,name=fMd5,proto3" json:"fMd5,omitempty"`
	Source               int32    `protobuf:"varint,17,opt,name=source,proto3" json:"source,omitempty"`
	Orientation          int32    `protobuf:"varint,18,opt,name=orientation,proto3" json:"orientation,omitempty"`
	Protocal             int32    `protobuf:"varint,19,opt,name=protocal,proto3" json:"protocal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Creative) Reset()         { *m = Creative{} }
func (m *Creative) String() string { return proto.CompactTextString(m) }
func (*Creative) ProtoMessage()    {}
func (*Creative) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9f9a1a9f0d021c3, []int{0}
}

func (m *Creative) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Creative.Unmarshal(m, b)
}
func (m *Creative) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Creative.Marshal(b, m, deterministic)
}
func (m *Creative) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Creative.Merge(m, src)
}
func (m *Creative) XXX_Size() int {
	return xxx_messageInfo_Creative.Size(m)
}
func (m *Creative) XXX_DiscardUnknown() {
	xxx_messageInfo_Creative.DiscardUnknown(m)
}

var xxx_messageInfo_Creative proto.InternalMessageInfo

func (m *Creative) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Creative) GetVideoLength() int32 {
	if m != nil {
		return m.VideoLength
	}
	return 0
}

func (m *Creative) GetVideoSize() int32 {
	if m != nil {
		return m.VideoSize
	}
	return 0
}

func (m *Creative) GetVideoResolution() string {
	if m != nil {
		return m.VideoResolution
	}
	return ""
}

func (m *Creative) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Creative) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Creative) GetWatchMile() int32 {
	if m != nil {
		return m.WatchMile
	}
	return 0
}

func (m *Creative) GetBitRate() int32 {
	if m != nil {
		return m.BitRate
	}
	return 0
}

func (m *Creative) GetIValue() int32 {
	if m != nil {
		return m.IValue
	}
	return 0
}

func (m *Creative) GetSValue() string {
	if m != nil {
		return m.SValue
	}
	return ""
}

func (m *Creative) GetFValue() float64 {
	if m != nil {
		return m.FValue
	}
	return 0
}

func (m *Creative) GetResolution() string {
	if m != nil {
		return m.Resolution
	}
	return ""
}

func (m *Creative) GetMime() string {
	if m != nil {
		return m.Mime
	}
	return ""
}

func (m *Creative) GetAdvCreativeId() string {
	if m != nil {
		return m.AdvCreativeId
	}
	return ""
}

func (m *Creative) GetCreativeId() int64 {
	if m != nil {
		return m.CreativeId
	}
	return 0
}

func (m *Creative) GetFMd5() string {
	if m != nil {
		return m.FMd5
	}
	return ""
}

func (m *Creative) GetSource() int32 {
	if m != nil {
		return m.Source
	}
	return 0
}

func (m *Creative) GetOrientation() int32 {
	if m != nil {
		return m.Orientation
	}
	return 0
}

func (m *Creative) GetProtocal() int32 {
	if m != nil {
		return m.Protocal
	}
	return 0
}

func init() {
	proto.RegisterType((*Creative)(nil), "decodePb.Creative")
}

func init() { proto.RegisterFile("decodePb/creative.proto", fileDescriptor_a9f9a1a9f0d021c3) }

var fileDescriptor_a9f9a1a9f0d021c3 = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0xc9, 0xdb, 0x7f, 0xe9, 0xf4, 0xad, 0xad, 0xa3, 0xe8, 0x20, 0x22, 0x41, 0x3c, 0xe4,
	0xa4, 0x07, 0xf1, 0x13, 0x78, 0x12, 0x2c, 0x48, 0x04, 0xef, 0xdb, 0xec, 0xb4, 0x59, 0x48, 0xbb,
	0x92, 0x6e, 0x5a, 0xf0, 0x93, 0xf8, 0x71, 0x65, 0x67, 0xd3, 0x36, 0x7a, 0x9b, 0xdf, 0xef, 0x49,
	0x9e, 0xdd, 0xcd, 0x06, 0x2e, 0x35, 0xe7, 0x56, 0xf3, 0xdb, 0xfc, 0x21, 0xaf, 0x58, 0x39, 0xb3,
	0xe5, 0xfb, 0xcf, 0xca, 0x3a, 0x8b, 0xf1, 0x3e, 0xb8, 0xfd, 0xee, 0x42, 0xfc, 0xdc, 0x84, 0x38,
	0x85, 0x4e, 0x5d, 0x95, 0x14, 0x25, 0x51, 0x3a, 0xcc, 0xfc, 0x88, 0x09, 0x8c, 0xb6, 0x46, 0xb3,
	0x7d, 0xe5, 0xf5, 0xd2, 0x15, 0xf4, 0x2f, 0x89, 0xd2, 0x5e, 0xd6, 0x56, 0x78, 0x0d, 0x43, 0xc1,
	0x77, 0xf3, 0xc5, 0xd4, 0x91, 0xfc, 0x28, 0x30, 0x85, 0x89, 0x40, 0xc6, 0x1b, 0x5b, 0xd6, 0xce,
	0xd8, 0x35, 0x75, 0xa5, 0xfd, 0xaf, 0xc6, 0x73, 0xe8, 0xed, 0x8c, 0x76, 0x05, 0xf5, 0xa4, 0x23,
	0x00, 0x5e, 0x40, 0xbf, 0x60, 0xb3, 0x2c, 0x1c, 0xf5, 0x45, 0x37, 0xe4, 0x57, 0xdd, 0x29, 0x97,
	0x17, 0x33, 0x53, 0x32, 0x0d, 0xc2, 0xaa, 0x07, 0x81, 0x04, 0x83, 0xb9, 0x71, 0x99, 0x72, 0x4c,
	0xb1, 0x64, 0x7b, 0xf4, 0x7d, 0xe6, 0x43, 0x95, 0x35, 0xd3, 0x30, 0xf4, 0x05, 0xf2, 0x7e, 0x13,
	0x3c, 0xc8, 0xf6, 0x1a, 0xf2, 0x7e, 0x11, 0xfc, 0x28, 0x89, 0xd2, 0x28, 0x6b, 0x08, 0x6f, 0x00,
	0xaa, 0xe3, 0x91, 0xfe, 0xcb, 0x3b, 0x2d, 0x83, 0x08, 0xdd, 0x95, 0x59, 0x31, 0x8d, 0x25, 0x91,
	0x19, 0xef, 0x60, 0xac, 0xf4, 0x76, 0xff, 0xb1, 0x5f, 0x34, 0x9d, 0x48, 0xf8, 0x5b, 0xfa, 0xe6,
	0xfc, 0xf8, 0xc8, 0x24, 0x89, 0xd2, 0x4e, 0xd6, 0x32, 0xbe, 0x79, 0x31, 0xd3, 0x4f, 0x34, 0x0d,
	0xcd, 0x7e, 0x96, 0xdd, 0xdb, 0xba, 0xca, 0x99, 0x4e, 0xc3, 0xa9, 0x02, 0xf9, 0xdb, 0xb3, 0x95,
	0xe1, 0xb5, 0x53, 0xb2, 0x4d, 0x0c, 0xb7, 0xd7, 0x52, 0x78, 0x05, 0xb1, 0xfc, 0x11, 0xb9, 0x2a,
	0xe9, 0x4c, 0xe2, 0x03, 0xcf, 0xfb, 0x32, 0x3d, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x34, 0xdd,
	0x6b, 0xaa, 0x46, 0x02, 0x00, 0x00,
}
